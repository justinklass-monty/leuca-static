events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 200M;
    
    # Cache settings
    proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=my_cache:10m max_size=5g inactive=800m use_temp_path=off;

    # HTTP server - redirect to HTTPS
    server {
        listen [::]:80;
        listen 80;
        server_name localhost drinkleuca.com www.drinkleuca.com;

        # Let's Encrypt challenge
        location ~ /.well-known/acme-challenge {
            allow all;
            root /var/www/certbot;
        }
        
    #     # Redirect all HTTP traffic to HTTPS
    #     location / {
    #         return 301 https://drinkleuca.com$request_uri;
    #     }
    # }

    # # HTTPS server
    # server {
    #     listen [::]:443 ssl http2;
    #     listen 443 ssl http2;
    #     server_name drinkleuca.com www.drinkleuca.com;

    #     # SSL configuration
    #     ssl_certificate /etc/nginx/ssl/drinkleuca.cer.pem;
    #     ssl_certificate_key /etc/nginx/ssl/drinkleuca.key.pem;
        
    #     # Modern SSL configuration
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #     ssl_session_tickets off;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Web root
        root /var/www/html;
        index index.html index.htm;

        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied expired no-cache no-store private auth;
        gzip_types 
            text/plain 
            text/css 
            text/xml 
            text/javascript 
            application/javascript 
            application/xml+rss 
            application/json
            application/xml
            image/svg+xml;
        gzip_disable "MSIE [1-6]\.";

        # Health check endpoint
        location /health-check {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Static files with caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|mp4|webm|ogg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }

        # HTML files - no caching for dynamic content
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # Main location block - serve static files
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Deny access to hidden files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
}
